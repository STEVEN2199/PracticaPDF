// <auto-generated />
using System;
using IBM.EntityFrameworkCore;
using IBM.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PuntoDeVenta.Data;

namespace PuntoDeVenta.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseDb2IdentityColumns()
                .HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("ProductosProveedores", b =>
                {
                    b.Property<int>("ProductosIdProduct")
                        .HasColumnType("int");

                    b.Property<int>("ProveedoresIdProveedor")
                        .HasColumnType("int");

                    b.HasKey("ProductosIdProduct", "ProveedoresIdProveedor");

                    b.HasIndex("ProveedoresIdProveedor");

                    b.ToTable("ProductosProveedores");
                });

            modelBuilder.Entity("PuntoDeVenta.Models.Bodega", b =>
                {
                    b.Property<int>("IdBodega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseDb2IdentityColumn();

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdBodega");

                    b.ToTable("Bodegas");
                });

            modelBuilder.Entity("PuntoDeVenta.Models.Productos", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseDb2IdentityColumn();

                    b.Property<int?>("BodegaIdBodega")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdProduct");

                    b.HasIndex("BodegaIdBodega");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("PuntoDeVenta.Models.Proveedores", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseDb2IdentityColumn();

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdProveedor");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("PuntoDeVenta.Models.Sede", b =>
                {
                    b.Property<int>("IdSede")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseDb2IdentityColumn();

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdSede");

                    b.ToTable("Sedes");
                });

            modelBuilder.Entity("ProductosProveedores", b =>
                {
                    b.HasOne("PuntoDeVenta.Models.Productos", null)
                        .WithMany()
                        .HasForeignKey("ProductosIdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PuntoDeVenta.Models.Proveedores", null)
                        .WithMany()
                        .HasForeignKey("ProveedoresIdProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PuntoDeVenta.Models.Productos", b =>
                {
                    b.HasOne("PuntoDeVenta.Models.Bodega", null)
                        .WithMany("Productos")
                        .HasForeignKey("BodegaIdBodega");
                });

            modelBuilder.Entity("PuntoDeVenta.Models.Bodega", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
